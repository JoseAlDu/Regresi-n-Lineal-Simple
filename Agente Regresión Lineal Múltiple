package examples.behaviours;
import jade.core.Agent;
import jade.core.behaviours.OneShotBehaviour;

public class RLM extends Agent{
    private double matriz [][] = {{1,41.9,29.1},{1,43.4,29.3},{1,43.9,29.5},{1,44.5,29.7},{1,47.3,29.9},{1,47.5,30.3},{1,47.9,30.5},{1,50.2,30.7},{1,52.8,30.8},{1,53.2,30.9},{1,56.7,31.5},{1,57.0,31.7},{1,63.5,31.9},{1,65.3,32.0},{1,71.1,32.1},{1,77.0,32.5},{1,77.8,32.9}};
    private double matrizT [][] = new double[3][17];
    private double matrizXT [][] = new double[3][3];
    private double matrizI [][] = new double[3][3];
    private double arregloY[] = {251.3,251.3,248.3,267.5,273,276.5,270.3,274.9,285,290,297,302.5,304.5,309.3,321.7,330.7,349};
    private double arregloX[] = new  double[3];
    private double arreglob[] = new  double[3];
    private double arregloF1 [] = {81.5,81.4,82.2,42.9,44.4,64.2};
    private double arregloF2 [] = {33.2,34.3,35.2,28.9,31.3,31.4};
    private double arregloYEX [] = new double[6];
    private double arreglo1[] = new  double[17];
    private double arreglo2[] = new  double[17];
    private double arreglo3[] = new  double[17];
    private double arreglo4[] = new  double[17];
    private double arreglo5[] = new  double[17];
    private double arreglo6[] = new  double[17];
    private double arreglo7[] = new  double[17];
    private double arreglo8[] = new  double[17];
    private double arreglo9[] = new  double[17];
    private double arreglo10[] = new  double[17];
    private double arreglo11[] = new  double[17];
    private double arreglo12[] = new  double[17];
    private double detA;

    protected void setup(){
        System.out.println("Regresi√≥n Lineal Multiple");
        addBehaviour(new MyTwoShotBehaviour());
    }

    private class MyTwoShotBehaviour extends OneShotBehaviour {

        public void action() {
            System.out.println("Matriz Original:");
            for (int i = 0; i<17; i++){
                for (int j = 0; j < 3; j++){
                    System.out.print(matriz[i][j] + " ");
                }
                System.out.println("");
            }

            for (int i = 0; i<3; i++){
                for (int j = 0; j < 17; j++) {
                    matrizT[i][j] = matriz[j][i];
                }
            }

            System.out.println("\nMatriz Transpuesta:");
            for (int i = 0; i<3; i++){
                for (int j = 0; j < 17; j++) {
                    System.out.print(matrizT[i][j] + " ");
                }
                System.out.println("");
            }

            for (int i = 0; i<17; i++){
                arreglo1[i] = matriz[i][0] * matrizT[0][i];
                arreglo2[i] = matriz[i][0] * matrizT[1][i];
                arreglo3[i] = matriz[i][0] * matrizT[2][i];
                arreglo4[i] = matriz[i][1] * matrizT[0][i];
                arreglo5[i] = matriz[i][1] * matrizT[1][i];
                arreglo6[i] = matriz[i][1] * matrizT[2][i];
                arreglo7[i] = matriz[i][2] * matrizT[0][i];
                arreglo8[i] = matriz[i][2] * matrizT[1][i];
                arreglo9[i] = matriz[i][2] * matrizT[2][i];
            }

            for (int i = 0; i<17; i++){
                matrizXT[0][0] += arreglo1[i];
                matrizXT[0][1] += arreglo2[i];
                matrizXT[0][2] += arreglo3[i];
                matrizXT[1][0] += arreglo4[i];
                matrizXT[1][1] += arreglo5[i];
                matrizXT[1][2] += arreglo6[i];
                matrizXT[2][0] += arreglo7[i];
                matrizXT[2][1] += arreglo8[i];
                matrizXT[2][2] += arreglo9[i];
            }

            System.out.println("\nMatrizXT Resultante de Matriz Original por Matriz Transpuesta:");
            for (int i = 0; i<3; i++){
                for (int j = 0; j < 3; j++) {
                    System.out.print(matrizXT[i][j] + " ");
                }
                System.out.println("");
            }

            for (int i = 0; i<17; i++){
                arreglo10[i] = matrizT[0][i] * arregloY[i];
                arreglo11[i] = matrizT[1][i] * arregloY[i];
                arreglo12[i] = matrizT[2][i] * arregloY[i];
            }

            for (int i = 0; i<17; i++){
                arregloX[0] += arreglo10[i];
                arregloX[1] += arreglo11[i];
                arregloX[2] += arreglo12[i];
            }

            System.out.println("\nMatriz Resultante de MatrizXT por MatrizY:");
            for (int i = 0; i<3; i++){
                System.out.println(arregloX[i]);
            }

            detA =((matrizXT[0][0]*matrizXT[1][1]*matrizXT[2][2])+(matrizXT[0][1]*matrizXT[1][2]*matrizXT[2][0])+(matrizXT[0][2]*matrizXT[1][0]*matrizXT[2][1]));
            detA +=((matrizXT[0][2]*matrizXT[1][1]*matrizXT[2][0]*-1)-(matrizXT[0][0]*matrizXT[1][2]*matrizXT[2][1])-(matrizXT[0][1]*matrizXT[1][0]*matrizXT[2][2]));

            matrizI[0][0]=((matrizXT[1][1]*matrizXT[2][2])-(matrizXT[2][1]*matrizXT[1][2]));
            matrizI[1][0]=((matrizXT[0][1]*matrizXT[2][2])-(matrizXT[2][0]*matrizXT[1][2]));
            matrizI[2][0]=((matrizXT[1][0]*matrizXT[2][1])-(matrizXT[2][0]*matrizXT[1][1]));
            matrizI[0][1]=((matrizXT[0][1]*matrizXT[2][2])-(matrizXT[2][1]*matrizXT[0][2]));
            matrizI[1][1]=((matrizXT[0][0]*matrizXT[2][2])-(matrizXT[2][0]*matrizXT[0][2]));
            matrizI[2][1]=((matrizXT[0][0]*matrizXT[2][1])-(matrizXT[2][0]*matrizXT[0][1]));
            matrizI[0][2]=((matrizXT[0][1]*matrizXT[1][2])-(matrizXT[1][1]*matrizXT[0][2]));
            matrizI[1][2]=((matrizXT[0][0]*matrizXT[1][2])-(matrizXT[1][0]*matrizXT[0][2]));
            matrizI[2][2]=((matrizXT[0][0]*matrizXT[1][1])-(matrizXT[1][0]*matrizXT[0][1]));

            matrizI[0][1]*=-1;
            matrizI[1][0]*=-1;
            matrizI[2][1]*=-1;
            matrizI[1][2]*=-1;

            matrizI[0][0]/=detA;
            matrizI[1][0]/=detA;
            matrizI[2][0]/=detA;
            matrizI[0][1]/=detA;
            matrizI[1][1]/=detA;
            matrizI[2][1]/=detA;
            matrizI[0][2]/=detA;
            matrizI[1][2]/=detA;
            matrizI[2][2]/=detA;

            System.out.println("\nMatriz Inverza de MatrizXT:");
            for (int i = 0; i<3; i++){
                for (int j = 0; j < 3; j++){
                    System.out.print(matrizI[i][j] + " ");
                }
                System.out.println("");
            }

            for (int i = 0; i<3; i++){
                arreglob[0] += matrizI[0][i] * arregloX[i];
                arreglob[1] += matrizI[1][i] * arregloX[i];
                arreglob[2] += matrizI[2][i] * arregloX[i];
            }

            System.out.println("");
            for (int i = 0; i<3; i++){
                System.out.println("B" + i + " = " + arreglob[i]);
            }

            System.out.println("\nCalculondo Y con respecto a Y=b0+b1*x1+b2*x2");
            System.out.println("Factor 1 | Factor 2 | Y");
            System.out.println("---------|----------|--------------------");
            for (int i=0; i<6; i++){
                arregloYEX[i] = arreglob[0]+arreglob[1]*arregloF1[i]+arreglob[2]*arregloF2[i];
                System.out.println(arregloF1[i]+"     | "+arregloF2[i]+"     | "+arregloYEX[i]);
            }
        }

        public int onEnd(){
            myAgent.doDelete();
            return super.onEnd();
        }
    }
}
